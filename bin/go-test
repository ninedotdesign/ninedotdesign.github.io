#!/bin/bash

set -x

TEST_EXIT=1

# Create a test branch for puppet
TEMP_BRANCH=${HOSTNAME}-test-sloth-${GO_REVISION_SLOTH:0:8} && \
cd ../puppet && \
git checkout -b $TEMP_BRANCH && \
git status && \
printf "class sloth {\n  \$version = \"$GO_REVISION_SLOTH\"\n}\n##Autogenerated by Go on `date`\n" > modules/sloth/manifests/version.pp && \
git commit -am "Testing new revision of sloth (auto-generated by Go)" && \
git push origin $TEMP_BRANCH && \
git checkout develop && \
git status && \
git branch -D $TEMP_BRANCH

PUPPET_EXIT=$?

if [[ $PUPPET_EXIT = 0 ]] ; then
  # Obtain an ETM and deploy this branch to it, then run tests
  etm=`etm take --script` && \
  etm set_puppet_branch $etm $TEMP_BRANCH && \
  ssh $etm "sudo gitpet" && \
  ssh $etm -l sloth "cd /u/apps/sloth/releases/$GO_REVISION_SLOTH && ./bin/test"
  TEST_EXIT=$?
  etm kill $etm
fi

# Clean up the branch in upstream
git status
git push origin :$TEMP_BRANCH

exit $TEST_EXIT

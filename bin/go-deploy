#!/bin/bash

APP="sloth"
REV=$GO_REVISION_SLOTH
SHORT_REV=${REV:0:8}

ASSETS_EXIT=1

# Create a test branch for puppet
TEMP_BRANCH=build-assets-$APP-$SHORT_REV && \
cd ../puppet && \
git checkout -b $TEMP_BRANCH && \
printf "class $APP {\n  \$version = \"$REV\"\n}\n##Autogenerated by Go on `date`\n" > modules/$APP/manifests/version.pp && \
git commit -am "Generating assets for $APP (auto-generated by Go)" && \
git push origin $TEMP_BRANCH && \
git checkout develop && \
git branch -D $TEMP_BRANCH

PUPPET_EXIT=$?

if [[ $PUPPET_EXIT = 0 ]] ; then
  # Obtain an ETM to compile and upload the assets
  DT="deploy_`date +%Y-%m-%d_%H-%M-%S`"
  etm=`etm take --script` && \
  etm set_puppet_branch $etm $TEMP_BRANCH && \
  ssh $etm "sudo gitpet" && \
  git status && \
  git fetch origin && \
  git reset --hard origin/develop && \
  git status && \
  ssh $etm -l $APP "cd /u/apps/$APP/releases/$REV && ENV=production ./bin/build && bundle exec rake asset_sync ENV=production AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" && \
  cd ../$APP && \
  git tag $DT && \
  git push --tags origin && \
  cd ../puppet && \
  git status && \
  printf "class $APP {\n  \$version = \"$DT\"\n}\n" > modules/$APP/manifests/version.pp && \
  git commit -am "Auto-increment $APP tag for deploy and sync assets ($SHORT_REV)" && \
  git status && \
  git pull --rebase origin develop && \
  git status && \
  git push origin develop && \
  git status
  ASSETS_EXIT=$?
  etm kill $etm
fi

# Clean up the branches and etms
git push origin :$TEMP_BRANCH

exit $ASSETS_EXIT
